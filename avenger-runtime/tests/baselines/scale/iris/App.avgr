import { LinearScale } from '.';

width := 480;
height := 480;

dataset iris: select * from read_csv(
    '/Users/jonmmease/VegaFusion/repos/avenger/avenger-runtime/tests/data/iris.csv'
);

comp x_scale: LinearScale {
    domain := (select [min("SepalLengthCm"), max("SepalLengthCm")] from @iris);
    nice := 5;
    range := [40, 440];
}

comp y_scale: LinearScale {
    domain := (select [min("SepalWidthCm"), max("SepalWidthCm")] from @iris);
    nice := 5;
    range := [440, 40];
}

// plot area outline
Rect {
    x := (@x_scale.range)[1];
    y := (@y_scale.range)[1];
    x2 := (@x_scale.range)[2];
    y2 := (@y_scale.range)[2];
    stroke := 'black';
    stroke_width := 0.2;
}

// x domain label
Symbol {
    data := select * from @iris;
    fill := 'crimson';
    x := @x_scale.scale("SepalLengthCm");
    y := @y_scale.scale("SepalWidthCm");
}

// y domain label
Text {
    x := 200;
    y := 30;
    val incr: @x_scale.final_domain;
    text := case when @incr is not null then cast(@incr as string) else 'NULL' end;
}

Text {
    x := 30;
    y := 240;
    angle := -90;
    val incr: @y_scale.final_domain;
    text := case when @incr is not null then cast(@incr as string) else 'NULL' end;
}
