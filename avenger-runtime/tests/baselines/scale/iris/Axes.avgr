import { LinearScale } from '.';

in comp x_scale: LinearScale {}
in comp y_scale: LinearScale {}
in val tick_len: 4;

// plot area outline
Rect {
    x := (@x_scale.range)[1];
    y := (@y_scale.range)[1];
    x2 := (@x_scale.range)[2];
    y2 := (@y_scale.range)[2];
    stroke := 'black';
    stroke_width := 0.2;
}

// X axis ticks
Rule {
    data := SELECT * FROM @x_scale.ticks;
    x := @x_scale.scale("tick_value");
    x2 := @x;
    y2 := (@y_scale.range)[1];
    y := @y2 + @tick_len;
}

// Y axis ticks
Rule {
    data := SELECT * FROM @y_scale.ticks;
    y := @y_scale.scale("tick_value");
    y2 := @y;
    x2 := (@x_scale.range)[1];
    x := @x2 - @tick_len;
}

// x domain label
Text {
    x := ((@x_scale.range)[2] + (@x_scale.range)[1]) * 0.5;
    y := (@y_scale.range)[1] + 20;
    val incr: @x_scale.final_domain;
    text := case when @incr is not null then cast(@incr as string) else 'NULL' end;
}

// y domain label
Text {
    x := 30;
    y := ((@y_scale.range)[2] + (@y_scale.range)[1]) * 0.5;
    angle := -90;
    val incr: @y_scale.final_domain;
    text := case when @incr is not null then cast(@incr as string) else 'NULL' end;
}
